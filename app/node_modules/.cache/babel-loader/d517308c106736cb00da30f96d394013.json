{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AutoEncryptionLoggerLevel = exports.aws4 = exports.saslprep = exports.Snappy = exports.Kerberos = void 0;\n\nconst error_1 = require(\"./error\");\n\nfunction makeErrorModule(error) {\n  const props = error ? {\n    kModuleError: error\n  } : {};\n  return new Proxy(props, {\n    get: (_, key) => {\n      if (key === 'kModuleError') {\n        return error;\n      }\n\n      throw error;\n    },\n    set: () => {\n      throw error;\n    }\n  });\n}\n\nexports.Kerberos = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `kerberos` not found. Please install it to enable kerberos authentication'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.Kerberos = require('kerberos');\n} catch {} // eslint-disable-line\n\n\nexports.Snappy = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `snappy` not found. Please install it to enable snappy compression'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.Snappy = require('snappy');\n} catch {} // eslint-disable-line\n\n\nexports.saslprep = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `saslprep` not found.' + ' Please install it to enable Stringprep Profile for User Names and Passwords'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.saslprep = require('saslprep');\n} catch {} // eslint-disable-line\n\n\nexports.aws4 = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `aws4` not found. Please install it to enable AWS authentication'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.aws4 = require('aws4');\n} catch {} // eslint-disable-line\n\n/** @public */\n\n\nexports.AutoEncryptionLoggerLevel = Object.freeze({\n  FatalError: 0,\n  Error: 1,\n  Warning: 2,\n  Info: 3,\n  Trace: 4\n});","map":{"version":3,"sources":["../src/deps.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAKA,SAAS,eAAT,CAAyB,KAAzB,EAAmC;AACjC,QAAM,KAAK,GAAG,KAAK,GAAG;AAAE,IAAA,YAAY,EAAE;AAAhB,GAAH,GAA6B,EAAhD;AACA,SAAO,IAAI,KAAJ,CAAU,KAAV,EAAiB;AACtB,IAAA,GAAG,EAAE,CAAC,CAAD,EAAS,GAAT,KAAqB;AACxB,UAAI,GAAG,KAAK,cAAZ,EAA4B;AAC1B,eAAO,KAAP;AACD;;AACD,YAAM,KAAN;AACD,KANqB;AAOtB,IAAA,GAAG,EAAE,MAAK;AACR,YAAM,KAAN;AACD;AATqB,GAAjB,CAAP;AAWD;;AAEU,OAAA,CAAA,QAAA,GAEyC,eAAe,CACjE,IAAI,OAAA,CAAA,2BAAJ,CACE,2FADF,CADiE,CAFxD;;AAQX,IAAI;AACF;AACA,EAAA,OAAA,CAAA,QAAA,GAAW,OAAO,CAAC,UAAD,CAAlB;AACD,CAHD,CAGE,MAAM,CAAE,C,CAAC;;;AAYA,OAAA,CAAA,MAAA,GAEyC,eAAe,CACjE,IAAI,OAAA,CAAA,2BAAJ,CACE,oFADF,CADiE,CAFxD;;AAQX,IAAI;AACF;AACA,EAAA,OAAA,CAAA,MAAA,GAAS,OAAO,CAAC,QAAD,CAAhB;AACD,CAHD,CAGE,MAAM,CAAE,C,CAAC;;;AAEA,OAAA,CAAA,QAAA,GAEyC,eAAe,CACjE,IAAI,OAAA,CAAA,2BAAJ,CACE,0CACE,8EAFJ,CADiE,CAFxD;;AASX,IAAI;AACF;AACA,EAAA,OAAA,CAAA,QAAA,GAAW,OAAO,CAAC,UAAD,CAAlB;AACD,CAHD,CAGE,MAAM,CAAE,C,CAAC;;;AAEA,OAAA,CAAA,IAAA,GAEyC,eAAe,CACjE,IAAI,OAAA,CAAA,2BAAJ,CACE,kFADF,CADiE,CAFxD;;AAQX,IAAI;AACF;AACA,EAAA,OAAA,CAAA,IAAA,GAAO,OAAO,CAAC,MAAD,CAAd;AACD,CAHD,CAGE,MAAM,CAAE,C,CAAC;;AAEX;;;AACa,OAAA,CAAA,yBAAA,GAA4B,MAAM,CAAC,MAAP,CAAc;AACrD,EAAA,UAAU,EAAE,CADyC;AAErD,EAAA,KAAK,EAAE,CAF8C;AAGrD,EAAA,OAAO,EAAE,CAH4C;AAIrD,EAAA,IAAI,EAAE,CAJ+C;AAKrD,EAAA,KAAK,EAAE;AAL8C,CAAd,CAA5B","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoEncryptionLoggerLevel = exports.aws4 = exports.saslprep = exports.Snappy = exports.Kerberos = void 0;\nconst error_1 = require(\"./error\");\nfunction makeErrorModule(error) {\n    const props = error ? { kModuleError: error } : {};\n    return new Proxy(props, {\n        get: (_, key) => {\n            if (key === 'kModuleError') {\n                return error;\n            }\n            throw error;\n        },\n        set: () => {\n            throw error;\n        }\n    });\n}\nexports.Kerberos = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `kerberos` not found. Please install it to enable kerberos authentication'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.Kerberos = require('kerberos');\n}\ncatch { } // eslint-disable-line\nexports.Snappy = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `snappy` not found. Please install it to enable snappy compression'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.Snappy = require('snappy');\n}\ncatch { } // eslint-disable-line\nexports.saslprep = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `saslprep` not found.' +\n    ' Please install it to enable Stringprep Profile for User Names and Passwords'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.saslprep = require('saslprep');\n}\ncatch { } // eslint-disable-line\nexports.aws4 = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `aws4` not found. Please install it to enable AWS authentication'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.aws4 = require('aws4');\n}\ncatch { } // eslint-disable-line\n/** @public */\nexports.AutoEncryptionLoggerLevel = Object.freeze({\n    FatalError: 0,\n    Error: 1,\n    Warning: 2,\n    Info: 3,\n    Trace: 4\n});\n//# sourceMappingURL=deps.js.map"]},"metadata":{},"sourceType":"script"}