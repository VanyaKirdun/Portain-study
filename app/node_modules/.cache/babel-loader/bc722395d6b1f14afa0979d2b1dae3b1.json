{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactTest\\\\app\\\\src\\\\Components\\\\authorization\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailDirty, setEmailDirty] = useState('');\n  const [passwordDirty, setPasswordDirty] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [formValid, setFormValid] = useState('');\n  const dispatch = useDispatch();\n\n  function emailHandler(e) {\n    this.setEmail(e.target.value);\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!re.test(String(e.target.value).toLowerCase())) {\n      this.setEmailError('Некорректный емейл');\n    } else {\n      this.setEmailError('');\n    }\n\n    if (this.state.emailError || this.state.passwordError || this.state.authType === 'РЕГИСТРАЦИЯ' && this.state.copyPasswordError) {\n      this.setFormValid(false);\n    } else {\n      this.setFormValid(true);\n    }\n  }\n\n  function blurHandler(e) {\n    switch (e.target.name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n\n      case 'password':\n        setPasswordDirty(true);\n        break;\n\n      default:\n        break;\n    }\n\n    if (emailError || passwordError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u0423\\u0422\\u041E\\u0420\\u0418\\u0417\\u0410\\u0426\\u0418\\u042F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), emailDirty && emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: emailError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => emailHandler(e),\n      value: email,\n      onBlur: e => blurHandler(e),\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"Enter your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: passwordError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 50\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => this.passwordHandler(e),\n      value: password,\n      onBlur: e => this.blurHandler(e),\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Enter your password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !formValid,\n      type: \"button\",\n      onClick: () => dispatch(login(email, password)),\n      children: this.state.authType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"S9y7YiNMc22Apq847IzFjKuNJc8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/reactTest/app/src/Components/authorization/Login.js"],"names":["React","useState","useDispatch","login","Login","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","dispatch","emailHandler","e","target","value","re","test","String","toLowerCase","state","authType","copyPasswordError","blurHandler","name","color","passwordHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,KAAR,QAAoB,oBAApB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMkB,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,WAASkB,YAAT,CAAuBC,CAAvB,EAAyB;AACrB,SAAKf,QAAL,CAAce,CAAC,CAACC,MAAF,CAASC,KAAvB;AACA,UAAMC,EAAE,GAAG,uJAAX;;AACA,QAAI,CAACA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACL,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN,CAAuBI,WAAvB,EAAR,CAAL,EAAmD;AAC/C,WAAKb,aAAL,CAAmB,oBAAnB;AACH,KAFD,MAEO;AACH,WAAKA,aAAL,CAAmB,EAAnB;AACH;;AAED,QAAG,KAAKc,KAAL,CAAWf,UAAX,IAAyB,KAAKe,KAAL,CAAWb,aAApC,IAAsD,KAAKa,KAAL,CAAWC,QAAX,KAAwB,aAAxB,IAAyC,KAAKD,KAAL,CAAWE,iBAA7G,EAAiI;AAC7H,WAAKZ,YAAL,CAAkB,KAAlB;AACH,KAFD,MAEO;AACH,WAAKA,YAAL,CAAkB,IAAlB;AACH;AACJ;;AAED,WAASa,WAAT,CAAqBV,CAArB,EAAuB;AACnB,YAAQA,CAAC,CAACC,MAAF,CAASU,IAAjB;AACI,WAAK,OAAL;AACItB,QAAAA,aAAa,CAAC,IAAD,CAAb;AACA;;AACJ,WAAK,UAAL;AACIE,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA;;AACJ;AACI;AARR;;AAWA,QAAGC,UAAU,IAAIE,aAAjB,EAAgC;AAC5BG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFD,MAEO;AACHA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ;;AAGD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMT,UAAU,IAAII,UAAf,iBAA8B;AAAK,MAAA,KAAK,EAAE;AAACoB,QAAAA,KAAK,EAAC;AAAP,OAAZ;AAAA,gBAA4BpB;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFnC,eAGI;AAAO,MAAA,QAAQ,EAAEQ,CAAC,IAAID,YAAY,CAACC,CAAD,CAAlC;AAAuC,MAAA,KAAK,EAAEhB,KAA9C;AAAqD,MAAA,MAAM,EAAEgB,CAAC,IAAIU,WAAW,CAACV,CAAD,CAA7E;AAAkF,MAAA,IAAI,EAAC,OAAvF;AAA+F,MAAA,IAAI,EAAC,MAApG;AAA2G,MAAA,WAAW,EAAC;AAAvH;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIMV,aAAa,IAAII,aAAlB,iBAAoC;AAAK,MAAA,KAAK,EAAE;AAACkB,QAAAA,KAAK,EAAC;AAAP,OAAZ;AAAA,gBAA4BlB;AAA5B;AAAA;AAAA;AAAA;AAAA,YAJzC,eAKI;AAAO,MAAA,QAAQ,EAAEM,CAAC,IAAI,KAAKa,eAAL,CAAqBb,CAArB,CAAtB;AAA+C,MAAA,KAAK,EAAEd,QAAtD;AAAgE,MAAA,MAAM,EAAEc,CAAC,IAAI,KAAKU,WAAL,CAAiBV,CAAjB,CAA7E;AAAkG,MAAA,IAAI,EAAC,UAAvG;AAAkH,MAAA,IAAI,EAAC,UAAvH;AAAkI,MAAA,WAAW,EAAC;AAA9I;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,QAAQ,EAAE,CAACJ,SAAnB;AAA8B,MAAA,IAAI,EAAC,QAAnC;AAA4C,MAAA,OAAO,EAAE,MAAME,QAAQ,CAAChB,KAAK,CAACE,KAAD,EAAQE,QAAR,CAAN,CAAnE;AAAA,gBAA8F,KAAKqB,KAAL,CAAWC;AAAzG;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAxDD;;GAAMzB,K;UAQeF,W;;;KARfE,K;AA0DN,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../../actions/user\";\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [emailDirty, setEmailDirty] = useState('');\r\n    const [passwordDirty, setPasswordDirty] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState(''); \r\n    const [formValid, setFormValid] = useState(''); \r\n    const dispatch = useDispatch()\r\n\r\n    function emailHandler (e){\r\n        this.setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(String(e.target.value).toLowerCase())){\r\n            this.setEmailError('Некорректный емейл')\r\n        } else {\r\n            this.setEmailError('')\r\n        }\r\n    \r\n        if(this.state.emailError || this.state.passwordError || (this.state.authType === 'РЕГИСТРАЦИЯ' && this.state.copyPasswordError)) {\r\n            this.setFormValid(false)\r\n        } else {\r\n            this.setFormValid(true)\r\n        }\r\n    }\r\n    \r\n    function blurHandler(e){\r\n        switch (e.target.name) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break;\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    \r\n        if(emailError || passwordError) {\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <form>\r\n            <h1>АУТОРИЗАЦИЯ</h1>\r\n            {(emailDirty && emailError) && <div style={{color:'red'}}>{emailError}</div>}\r\n            <input onChange={e => emailHandler(e)} value={email} onBlur={e => blurHandler(e)} name='email' type='text' placeholder='Enter your email'/>\r\n            {(passwordDirty && passwordError) && <div style={{color:'red'}}>{passwordError}</div>}\r\n            <input onChange={e => this.passwordHandler(e)} value={password} onBlur={e => this.blurHandler(e)} name='password' type='password' placeholder='Enter your password'/>\r\n            <button disabled={!formValid} type='button' onClick={() => dispatch(login(email, password))}>{this.state.authType}</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}