{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactTest\\\\app\\\\src\\\\Components\\\\authorization\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailDirty, setEmailDirty] = useState('');\n  const [passwordDirty, setPasswordDirty] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [formValid, setFormValid] = useState('');\n  const dispatch = useDispatch();\n\n  function emailHandler(e) {\n    setEmail(e.target.value); //this.setEmail(e.target.value)\n\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!re.test(String(e.target.value).toLowerCase())) {\n      setEmailError('Некорректный емейл');\n    } else {\n      setEmailError('');\n    }\n\n    if (emailError || passwordError\n    /*|| (this.state.authType === 'РЕГИСТРАЦИЯ' && this.state.copyPasswordError)*/\n    ) {\n        setFormValid(false);\n      } else {\n      setFormValid(true);\n    }\n  }\n\n  function passwordHandler(e) {\n    setPassword(e.target.value);\n\n    if (e.target.value.length < 3 || e.target.value.length > 15) {\n      setPasswordError('Пароль должен быть длинее 3 и меньше 15');\n\n      if (!e.target.value) {\n        setPasswordError('Password не может быть пустым');\n      }\n    } else {\n      setPasswordError('');\n    }\n\n    if (emailError || passwordError\n    /*|| (this.state.authType === 'РЕГИСТРАЦИЯ' && this.state.copyPasswordError)*/\n    ) {\n        setFormValid(false);\n      } else {\n      setFormValid(true);\n    }\n  }\n\n  function blurHandler(e) {\n    switch (e.target.name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n\n      case 'password':\n        setPasswordDirty(true);\n        break;\n\n      default:\n        break;\n    }\n\n    if (emailError || passwordError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"auth__title\",\n        children: \"\\u0410\\u0412\\u0422\\u041E\\u0420\\u0418\\u0417\\u0410\\u0426\\u0418\\u042F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__name\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), emailDirty && emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => emailHandler(e),\n          value: email,\n          onBlur: e => blurHandler(e),\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__name\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"auth__input\",\n          onChange: e => passwordHandler(e),\n          value: password,\n          onBlur: e => blurHandler(e),\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__submit\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formValid,\n          type: \"button\",\n          onClick: () => {\n            dispatch(login(email, password));\n            props.setModalActive(false, false);\n          },\n          children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"S9y7YiNMc22Apq847IzFjKuNJc8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/reactTest/app/src/Components/authorization/Login.js"],"names":["React","useState","useDispatch","login","Login","props","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","dispatch","emailHandler","e","target","value","re","test","String","toLowerCase","passwordHandler","length","blurHandler","name","color","setModalActive"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../../actions/user\";\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [emailDirty, setEmailDirty] = useState('');\r\n    const [passwordDirty, setPasswordDirty] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState(''); \r\n    const [formValid, setFormValid] = useState(''); \r\n    const dispatch = useDispatch()\r\n\r\n    function emailHandler (e){\r\n        setEmail(e.target.value)\r\n        //this.setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(String(e.target.value).toLowerCase())){\r\n            setEmailError('Некорректный емейл')\r\n        } else {\r\n            setEmailError('')\r\n        }\r\n    \r\n        if(emailError || passwordError /*|| (this.state.authType === 'РЕГИСТРАЦИЯ' && this.state.copyPasswordError)*/) {\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    }\r\n\r\n    function passwordHandler(e) {\r\n        setPassword(e.target.value)\r\n        if(e.target.value.length < 3 || e.target.value.length > 15){\r\n            setPasswordError('Пароль должен быть длинее 3 и меньше 15')\r\n            if(!e.target.value){\r\n                setPasswordError('Password не может быть пустым')\r\n            } \r\n        } else {\r\n            setPasswordError('')\r\n        }\r\n\r\n        if(emailError || passwordError /*|| (this.state.authType === 'РЕГИСТРАЦИЯ' && this.state.copyPasswordError)*/) {\r\n           setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    }\r\n    \r\n    function blurHandler(e){\r\n        switch (e.target.name) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break;\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    \r\n        if(emailError || passwordError) {\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='auth'>\r\n            <form className='auth__form'>\r\n                <h1 className='auth__title'>АВТОРИЗАЦИЯ</h1>\r\n                <div className='auth__name'>Login</div>\r\n                {(emailDirty && emailError) && <div style={{color:'red'}}>{emailError}</div>}\r\n                <div className='auth__input'>\r\n                    <input onChange={e => emailHandler(e)} value={email} onBlur={e => blurHandler(e)} name='email' type='text' placeholder='Enter your email'/>\r\n                    <span></span>\r\n                </div>\r\n                <div className='auth__name'>Password</div>\r\n                {(passwordDirty && passwordError) && <div style={{color:'red'}}>{passwordError}</div>}\r\n                <div className='auth__input'>\r\n                    <input className='auth__input' onChange={e => passwordHandler(e)} value={password} onBlur={e => blurHandler(e)} name='password' type='password' placeholder='Enter your password'/>\r\n                    <span></span>\r\n                </div>\r\n                <div className='auth__submit'><button disabled={!formValid} type='button' onClick={() => {dispatch(login(email, password)); props.setModalActive(false, false)}}>Авторизироваться</button></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}