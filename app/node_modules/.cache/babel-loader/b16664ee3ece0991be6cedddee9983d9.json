{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactTest\\\\app\\\\src\\\\Components\\\\authorization\\\\Registration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { registration } from \"../../actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reqistration = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [copyPassword, setCopyPassword] = useState(\"\");\n  const [emailDirty, setEmailDirty] = useState('');\n  const [passwordDirty, setPasswordDirty] = useState('');\n  const [copyPasswordDirty, setCopyPasswordDirty] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [copyPasswordError, setCopyPasswordError] = useState('');\n  const [formValid, setFormValid] = useState('');\n  const dispatch = useDispatch();\n\n  function emailHandler(e) {\n    setEmail(e.target.value);\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!re.test(String(e.target.value).toLowerCase())) {\n      setEmailError('Некорректный емейл');\n    } else {\n      setEmailError('');\n    }\n\n    if (emailError || passwordError || copyPasswordError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }\n\n  function passwordHandler(e) {\n    setPassword(e.target.value);\n\n    if (e.target.value.length < 3 || e.target.value.length > 15) {\n      setPasswordError('Пароль должен быть длинее 3 и меньше 15');\n\n      if (!e.target.value) {\n        setPasswordError('Password не может быть пустым');\n      }\n    } else {\n      setPasswordError('');\n    }\n\n    if (emailError || passwordError || copyPasswordError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }\n\n  function copyPasswordHandler(e) {\n    setCopyPassword(e.target.value);\n\n    if (!e.target.value) {\n      setCopyPasswordError('Copy Password не может быть пустым');\n    } else if (e.target.value !== password) {\n      setCopyPasswordError('Пароли должны совпадать');\n    } else {\n      setCopyPasswordError('');\n    }\n\n    if (emailError || passwordError || copyPasswordError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }\n\n  function blurHandler(e) {\n    switch (e.target.name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n\n      case 'password':\n        setPasswordDirty(true);\n        break;\n\n      case 'copyPassword':\n        setCopyPasswordDirty(true);\n        break;\n\n      default:\n        break;\n    }\n\n    if (emailError || passwordError || copyPasswordError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"auth__title\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__name\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), emailDirty && emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"auth__input\",\n        onChange: e => emailHandler(e),\n        value: email,\n        onBlur: e => blurHandler(e),\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__name\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"auth__input\",\n        onChange: e => passwordHandler(e),\n        value: password,\n        onBlur: e => blurHandler(e),\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__name\",\n        children: \"Confirm password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), copyPasswordDirty && copyPasswordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: copyPasswordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"auth__input\",\n        onChange: e => copyPasswordHandler(e),\n        value: copyPassword,\n        onBlur: e => blurHandler(e),\n        name: \"copyPassword\",\n        type: \"password\",\n        placeholder: \"Enter your password again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__submit\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formValid,\n          type: \"button\",\n          onClick: () => dispatch(registration(email, password)),\n          children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reqistration, \"QqR+We+QMLCcUzKlpXIX8MNucDk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Reqistration;\nexport default Reqistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reqistration\");","map":{"version":3,"sources":["F:/reactTest/app/src/Components/authorization/Registration.js"],"names":["React","useState","useDispatch","registration","Reqistration","email","setEmail","password","setPassword","copyPassword","setCopyPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","copyPasswordDirty","setCopyPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","copyPasswordError","setCopyPasswordError","formValid","setFormValid","dispatch","emailHandler","e","target","value","re","test","String","toLowerCase","passwordHandler","length","copyPasswordHandler","blurHandler","name","color"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {registration} from \"../../actions/user\";\r\n\r\nconst Reqistration = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [copyPassword, setCopyPassword] = useState(\"\")\r\n    const [emailDirty, setEmailDirty] = useState('');\r\n    const [passwordDirty, setPasswordDirty] = useState('');\r\n    const [copyPasswordDirty, setCopyPasswordDirty] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState(''); \r\n    const [copyPasswordError, setCopyPasswordError] = useState(''); \r\n    const [formValid, setFormValid] = useState(''); \r\n    const dispatch = useDispatch()\r\n\r\n    function emailHandler (e){\r\n        setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(String(e.target.value).toLowerCase())){\r\n            setEmailError('Некорректный емейл')\r\n        } else {\r\n            setEmailError('')\r\n        }\r\n    \r\n        if(emailError || passwordError || copyPasswordError) {\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    }\r\n\r\n    function passwordHandler(e) {\r\n        setPassword(e.target.value)\r\n        if(e.target.value.length < 3 || e.target.value.length > 15){\r\n            setPasswordError('Пароль должен быть длинее 3 и меньше 15')\r\n            if(!e.target.value){\r\n                setPasswordError('Password не может быть пустым')\r\n            } \r\n        } else {\r\n            setPasswordError('')\r\n        }\r\n\r\n        if(emailError || passwordError || copyPasswordError) {\r\n           setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    }\r\n\r\n    function copyPasswordHandler(e) {\r\n        setCopyPassword(e.target.value)\r\n        if(!e.target.value){\r\n            setCopyPasswordError('Copy Password не может быть пустым')     \r\n        } else if(e.target.value !== password) {\r\n            setCopyPasswordError('Пароли должны совпадать')\r\n        } else {\r\n            setCopyPasswordError('')\r\n        }\r\n        \r\n        if(emailError || passwordError || copyPasswordError) {\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    }\r\n    \r\n    function blurHandler(e){\r\n        switch (e.target.name) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break;\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break;\r\n            case 'copyPassword':\r\n                setCopyPasswordDirty(true)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    \r\n        if(emailError || passwordError || copyPasswordError) {\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='auth'>\r\n            <form className='auth__form'>\r\n                <h1 className='auth__title'>Регистрация</h1>\r\n                <div className='auth__name'>Login</div>\r\n                {(emailDirty && emailError) && <div style={{color:'red'}}>{emailError}</div>}\r\n                <input className='auth__input' onChange={e => emailHandler(e)} value={email} onBlur={e => blurHandler(e)} name='email' type='text' placeholder='Enter your email'/>\r\n                <div className='auth__name'>Password</div>\r\n                {(passwordDirty && passwordError) && <div style={{color:'red'}}>{passwordError}</div>}\r\n                <input className='auth__input' onChange={e => passwordHandler(e)} value={password} onBlur={e => blurHandler(e)} name='password' type='password' placeholder='Enter your password'/>\r\n                <div className='auth__name'>Confirm password</div>\r\n                {(copyPasswordDirty && copyPasswordError) && <div style={{color:'red'}}>{copyPasswordError}</div>}\r\n                <input className='auth__input' onChange={e => copyPasswordHandler(e)} value={copyPassword} onBlur={e => blurHandler(e)} name='copyPassword' type='password' placeholder='Enter your password again'/>\r\n                <div className='auth__submit'>\r\n                    <button disabled={!formValid} type='button' onClick={() => dispatch(registration(email, password))}>Регистрация</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reqistration"]},"metadata":{},"sourceType":"module"}